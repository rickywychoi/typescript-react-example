[{"C:\\Users\\cchaf\\Ricky\\Programming\\Web\\typescript-react-example\\src\\index.tsx":"1","C:\\Users\\cchaf\\Ricky\\Programming\\Web\\typescript-react-example\\src\\reportWebVitals.ts":"2","C:\\Users\\cchaf\\Ricky\\Programming\\Web\\typescript-react-example\\src\\App.tsx":"3","C:\\Users\\cchaf\\Ricky\\Programming\\Web\\typescript-react-example\\src\\TextField.tsx":"4","C:\\Users\\cchaf\\Ricky\\Programming\\Web\\typescript-react-example\\src\\Counter.tsx":"5"},{"size":500,"mtime":499162500000,"results":"6","hashOfConfig":"7"},{"size":425,"mtime":499162500000,"results":"8","hashOfConfig":"7"},{"size":787,"mtime":1611945206653,"results":"9","hashOfConfig":"7"},{"size":816,"mtime":1611944029706,"results":"10","hashOfConfig":"7"},{"size":392,"mtime":1611944416998,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"2vvney",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"C:\\Users\\cchaf\\Ricky\\Programming\\Web\\typescript-react-example\\src\\index.tsx",[],["24","25"],"C:\\Users\\cchaf\\Ricky\\Programming\\Web\\typescript-react-example\\src\\reportWebVitals.ts",[],"C:\\Users\\cchaf\\Ricky\\Programming\\Web\\typescript-react-example\\src\\App.tsx",[],"C:\\Users\\cchaf\\Ricky\\Programming\\Web\\typescript-react-example\\src\\TextField.tsx",["26","27"],"import React, { useRef, useState } from 'react';\r\n\r\ninterface Person {\r\n    firstName: string;\r\n    lastName: string;\r\n}\r\n\r\ninterface Props {\r\n    text: string;\r\n    ok?: boolean;\r\n    i?: number;\r\n    fn?: (bob: string) => string;\r\n    person: Person;\r\n    handleChange?: (event: React.ChangeEvent<HTMLInputElement>) => void;\r\n}\r\n\r\nconst TextField = (props: Props) => {\r\n    const [count, setCount] = useState<number | undefined>(null!);\r\n    const inputRef = useRef<HTMLInputElement>(null);\r\n    const divRef = useRef<HTMLDivElement>(null);\r\n\r\n    return (\r\n        <div ref={divRef}>\r\n            <h1>{props.text}</h1>\r\n            <h3>{props.person.firstName} {props.person.lastName}</h3>\r\n            <input ref={inputRef}  onChange={props.handleChange}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TextField;","C:\\Users\\cchaf\\Ricky\\Programming\\Web\\typescript-react-example\\src\\Counter.tsx",[],{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","severity":1,"message":"33","line":18,"column":12,"nodeType":"34","messageId":"35","endLine":18,"endColumn":17},{"ruleId":"32","severity":1,"message":"36","line":18,"column":19,"nodeType":"34","messageId":"35","endLine":18,"endColumn":27},"no-native-reassign",["37"],"no-negated-in-lhs",["38"],"@typescript-eslint/no-unused-vars","'count' is assigned a value but never used.","Identifier","unusedVar","'setCount' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]